import pandas as pd
import os

file_list = pd.read_csv("//projects/molonc/aparicio_lab/sbeatty/BIOF/BIOF-286/filemanifest.csv")
file_list = file_list['x']
file_list = file_list.str.replace("\\./","//projects/molonc/aparicio_lab/sbeatty/BIOF/BIOF-286/tyler_data_transfer/biof286/")

file_basenames = [os.path.basename(file_i) for file_i in file_list]
files = pd.Series(file_basenames)

file_basenames = [os.path.basename(file_i) for file_i in file_list]
samples =  [file_i.split(".")[0] for file_i in file_basenames]

input_path_dict= dict(zip(samples, file_list))

rule all:
	input:
		expand("annotated/{sample_expand}.clinvar.cosmic.exons.csv", sample_expand=samples)

#rule copy_in:
#	input:
#		
#	output:
#		"softlink_input_files/{sample}.vcf"
#	resources:
#		mem_per_cpu=3000,
#		cpus=1
#	run:
#		shell("echo 'ln -s {input} {output}'")
#		shell("ln -s {input} {output}")

rule annotate:
	input:
		lambda wildcards: input_path_dict[wildcards.sample]
	output:
		temp("clinvar_added/{sample}.clinvar.csv")
	run:
		shell("Rscript //projects/molonc/aparicio_lab/sbeatty/yvr_pipelines/annotate/add_clinvar.R --targetfile={input} --outputfile={output} --cores=10 --loadreference=TRUE")

rule add_cosmic:
	input:
		sample_data="clinvar_added/{sample}.clinvar.csv",
		reference_data="/projects/molonc/aparicio_lab/sbeatty/reference/cosmic_coordinates_added_mutation_types_parsed_reduced.csv"
	output:
		temp("cosmic_added/{sample}.clinvar.cosmic.csv")
	run:
		shell("Rscript //projects/molonc/aparicio_lab/sbeatty/yvr_pipelines/annotate/add_cosmic.R --targetfile={input.sample_data} --outputfile={output} --cosmic_reference_file={input.reference_data}")

rule flag_exons:
	input:
		"cosmic_added/{sample}.clinvar.cosmic.csv"
	output:
		"annotated/{sample}.clinvar.cosmic.exons.csv"
	run:
		shell("Rscript //projects/molonc/aparicio_lab/sbeatty/yvr_pipelines/annotate/flag_exons.R --target_file={input} --outputfile={output}")