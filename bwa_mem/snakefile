import glob
import pandas as pd
import os.path
target_files = glob.glob("/shahlab/danlai/MIS-357/concat/*.fastq.gz")
target_files = pd.Series(target_files).apply(os.path.basename).replace("_R1.fastq.gz","", regex=True).replace("_R2.fastq.gz","", regex=True)

rule all:
    input:
        bam=expand("dedup/{sample}.bam", sample=target_files),
        metrics=expand("dedup/{sample}.metrics.txt", sample=target_files),
        index=expand("dedup/{sample}.bam.bai", sample=target_files)

         
rule bwa_mem:
    input:
        reads=["reads/{sample}_R1.fastq", "reads/{sample}_R2.fastq"]
    output:
        "mapped/{sample}.bam"
    log:
        "logs/bwa_mem/{sample}.log"
    params:
        index="/shahlab/pipelines/reference/GRCh37-lite.fa",
        extra=r"-M -R '@RG\tID:{sample}\tSM:{sample}'",
        sort="samtools",             # Can be 'none', 'samtools' or 'picard'.
        sort_order="coordinate",  # Can be 'queryname' or 'coordinate'.
        sort_extra="-m 10G"            # Extra args for samtools/picard.
    threads: 18
    wrapper:
        "file:wrappers/bwa_mem"

rule samtools_sort:
    input:
        "mapped/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam"
    shell:
        "samtools sort -T sorted_reads/{wildcards.sample} "
        "-@ 20 -O bam -o {output} {input}"

#3) picard markdups
rule mark_duplicates:
    input:
        "sorted_reads/{sample}.bam"
    output:
        bam="dedup/{sample}.bam",
        metrics="dedup/{sample}.metrics.txt"
    log:
        "logs/picard/dedup/{sample}.log"
    shell:
        "/shahlab/pipelines/apps_centos6/jdk1.8.0_51/bin/java -jar /shahlab/pipelines/apps_centos6/picard-tools-1.119/MarkDuplicates.jar I={input} OUTPUT={output.bam} M={output.metrics}"

#"java -jar /shahlab/pipelines/apps_centos6/picard-tools-1.141/picard.jar MarkDuplicates I={input} OUTPUT={output.bam} M={output.metrics}"

##4) samtools index
rule samtools_index:
    input:
        "dedup/{sample}.bam"
    output:
        "dedup/{sample}.bam.bai"
    params:
        "" # optional params string
    wrapper:
        "file:wrappers/samtools_index"